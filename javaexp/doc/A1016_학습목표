# 학습목표 #
- 자바의 예외 처리 방식 이해
- try, catch, finally, throw 키워드 사용 방법 습득
- 사용자 정의 예외 생성 방법 학습

# 주요 핵심 키워드와 개념 #
- 예외(Exception)
- 오류(Error)
- try, catch, finally
- throw
- Checked vs Unchecked Exception
- 사용자 정의 예외(Custom Exception)

# 생각해볼 내용 #
- 왜 예외처리가 필요한가?
- 모든 에외를 잡아내는 것이 좋은 코드인가?
- 예외처리와 코드 가독성 및 유지 관리 사이의 균형은 어떻게 찾을 것인가?

# 퀴즈 #
1. 예외 처리와 관련 없는 키워드는? c
a. try
b. throw
c. int
d. catch

2. Checked 예외와 Unchecked 예외의 차이점은?
3. 사용자 정의 예외를 생성하려면 어떤 클래스를 확장해야 하는가?

# 실무적용 예시 #
- 로그 시스템 : 실제 서비스 중 발생한 예외를 로그로 기록, 분석하여 원인 파악 및 대응 방안
- 결제 시스템 : 예외 처리를 통해 결제 과정 중 오류 발생 시 안전하게 롤백하고, 사용자에게 명확한 오류 메세지 제공
- 파일 업로드 기능 : 파일 형식, 크기 등의 유효성 검사 후 예외 처리를 통해 안전한 파일 업로드 
				보장 렇게 예외 처리를 학습하면 프로그램의 안정성을 높이고 사용자 겸험을 향상시킴
				프로그램의 안정성을 높이고 사용자 경험을 향상 시킬 수 잇다.